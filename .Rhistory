scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
VoPI
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1
VoI <- abs(expected_costs$expected_costs[2] - expected_costs$expected_costs[1])
sa_df <- data.frame(fn = double(), VoI = double())
prob_lower <- 0; prob_upper <- 0.4
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375, label = paste('VoI at 5%:', scales::dollar(signif(x = VoI, digits = 3))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(collapse = TRUE)
library(extrafont); library(tidyverse); library(DomDF)
library(RHugin)
setwd("~/PhD/Journals/DCE")
prior_analysis <- RHugin::read.rhd('influence_diagram.net')
plot.RHuginDomain(x = prior_analysis, what = 'network')
library(gt)
prior_prob_damage <- 0.3
prob_tibble <- tribble(
~Condition, ~Probability,
'Pr(car damaged)', prior_prob_damage,
'Pr(car undamaged)', (1 - prior_prob_damage),
'Pr(car damaged | repair performed)', 0,
)
cost_tibble <- tribble(
~Outcome, ~Cost,
'Perform Repair', scales::dollar(x = 600),
'Breakdown', scales::dollar(x = 3000)
)
prob_tibble %>%
gt() %>%
tab_header(
title = md('*Probabilities* used in the decision analysis')
) %>%
tab_style(
style = list(
cell_fill(color = 'white')
),
locations = cells_body()
)
cost_tibble %>%
gt() %>%
tab_header(
title = md('*Costs* used in the decision analysis')
) %>%
tab_style(
style = list(
cell_fill(color = 'white')
),
locations = cells_body()
)
cost_tibble %>%
gt() %>%
tab_header(
title = md('*Costs* used in the decision analysis')
) %>%
tab_style(
style = list(
cell_fill(color = 'white')
),
locations = cells_body()
)
repair_cost <- -600
repair_cost_table <- get.table(domain = prior_analysis, node = 'Cost_Repair')
repair_cost_table['Utility'] <- c(0, repair_cost)
set.table(domain = prior_analysis, node = 'Cost_Repair', data = repair_cost_table)
breakdown_cost <- -3000
breakdown_cost_table <- get.table(domain = prior_analysis, node = 'Cost_Breakdown')
breakdown_cost_table['Utility'] <- c(breakdown_cost, 0)
set.table(domain = prior_analysis, node = 'Cost_Breakdown', data = breakdown_cost_table)
prior_prob_damage <- 0.3
condition_table <- get.table(domain = prior_analysis, node = 'Condition')
condition_table['Freq'] <- c(prior_prob_damage, (1 - prior_prob_damage))
set.table(domain = prior_analysis, node = 'Condition', data = condition_table)
breakdown_table <- get.table(domain = prior_analysis, node = 'Breakdown')
breakdown_table['Freq'] <- c(1, 0, 0, 1, 0, 1, 0, 1)
set.table(domain = prior_analysis, node = 'Breakdown', data = breakdown_table)
RHugin::compile(object = prior_analysis)
RHugin::propagate(object = prior_analysis)
expected_costs <- get.utility(domain = prior_analysis, node = 'Repair')
expected_costs  <- as.data.frame(expected_costs)
expected_costs %>%
dplyr::mutate(Decision = repair_cost_table$Repair,
expected_costs = scales::dollar(expected_costs)) %>%
dplyr::rename('Expected Cost' = expected_costs) %>%
gt() %>%
tab_style(
style = list(
cell_fill(color = 'white')
),
locations = cells_body()
)
minC <- - 5*10^3; maxC <- 1.25e4; c <- seq(from = minC, to = maxC, length.out = 1000)
BigEvil <- data.frame(Cost = c, u = c*10^-4); Wholesome <- data.frame(c = c, u = 0)
for (i in seq(from = 1, to = nrow(Wholesome), by = 1)){
Wholesome$u[i] <- log(x = (1 + 2.5*10^-4 * (Wholesome$c[i])), base = exp(1))
}
colnames(BigEvil) <- c('Cost', 'Big Evil Tech'); colnames(Wholesome) <- c('Cost', 'Wholesome Engineering Co.')
dplyr::left_join(x = BigEvil, y = Wholesome, by = 'Cost') %>%
tidyr::pivot_longer(cols = -c('Cost'), names_to = 'Business', values_to = 'Utility') %>%
ggplot(mapping = aes(x = Cost, y = Utility))+
scale_color_manual(values = c('forestgreen', 'firebrick'))+
geom_line(aes(col = as_factor(Business), linetype = as_factor(Business)))+
scale_linetype_manual(values = c(1, 2))+
scale_x_continuous(name = 'Profit', limits = c(minC, maxC), labels = scales::dollar)+
scale_y_continuous(name = 'Normalised Utility', limits = c(-3, 3))+
theme_ddf_light()
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
plot.RHuginDomain(x = decisionAnalysis, what = 'network')
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
plot.RHuginDomain(x = prepost_analysis, what = 'network')
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
expected_costs  <- as.data.frame(expected_costs)
VoPI <- abs(expected_costs$expected_costs[2] - expected_costs$expected_costs[1])
expected_costs %>%
dplyr::mutate(Decision = c('Perform Test', 'No Test'),
expected_costs = scales::dollar(expected_costs)) %>%
dplyr::rename('Expected Cost' = expected_costs) %>%
gt() %>%
tab_style(
style = list(
cell_fill(color = 'white')
),
locations = cells_body()
)
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1; false_neg <- 0.05
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - false_pos), false_neg, 0,
0, 0, 1,
false_pos, (1 - false_neg), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
expected_costs  <- as.data.frame(expected_costs)
expected_costs %>%
dplyr::mutate(Decision = c('Perform Test', 'No Test'),
expected_costs = scales::dollar(expected_costs)) %>%
dplyr::rename('Expected Cost' = expected_costs) %>%
gt() %>%
tab_style(
style = list(
cell_fill(color = 'white')
),
locations = cells_body()
)
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1
VoI <- abs(expected_costs$expected_costs[2] - expected_costs$expected_costs[1])
sa_df <- data.frame(fn = double(), VoI = double())
prob_lower <- 0; prob_upper <- 0.4
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375,
label = paste('VoI at 5%:', scales::dollar(signif(x = VoI, digits = 3)))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
DomDF::theme_ddf_light()
blogdown::serve_site()
blogdown::serve_site()
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1
VoI <- abs(expected_costs$expected_costs[2] - expected_costs$expected_costs[1])
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1; false_neg <- 0.05
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - false_pos), false_neg, 0,
0, 0, 1,
false_pos, (1 - false_neg), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
expected_costs  <- as.data.frame(expected_costs)
expected_costs %>%
dplyr::mutate(Decision = c('Perform Test', 'No Test'),
expected_costs = scales::dollar(expected_costs)) %>%
dplyr::rename('Expected Cost' = expected_costs) %>%
gt() %>%
tab_style(
style = list(
cell_fill(color = 'white')
),
locations = cells_body()
)
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1
VoI <- abs(expected_costs$expected_costs[2] - expected_costs$expected_costs[1])
sa_df <- data.frame(fn = double(), VoI = double())
prob_lower <- 0; prob_upper <- 0.4
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375,
label = paste('VoI at 5%:', scales::dollar(signif(VoI, 3)))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
DomDF::theme_ddf_light()
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1
VoI <- abs(expected_costs$expected_costs[2] - expected_costs$expected_costs[1])
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1
#VoI <- abs(expected_costs$expected_costs[2] - expected_costs$expected_costs[1])
sa_df <- data.frame(fn = double(), VoI = double())
prob_lower <- 0; prob_upper <- 0.4
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375,
label = paste('VoI at 5%:', scales::dollar(signif(VoI, 3)))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
blogdown::stop_server()
blogdown::serve_site()
library(RHugin)
prior_analysis <- RHugin::read.rhd('influence_diagram.net')
plot.RHuginDomain(x = decisionAnalysis, what = 'network')
library(RHugin)
prior_analysis <- RHugin::read.rhd('influence_diagram.net')
plot.RHuginDomain(x = prior_analysis, what = 'network')
blogdown::serve_site()
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1; prob_lower <- 0; prob_upper <- 0.4
sa_df <- data.frame(fn = double(), VoI = double())
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375,
label = paste('VoI at 5%:', scales::dollar(signif(VoI, 3)))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1; prob_lower <- 0; prob_upper <- 0.4
sa_df <- data.frame(fn = double(), VoI = double())
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
# geom_text(data = sa_df %>%
#              dplyr::filter(fn == 0.05),
#           mapping = aes(x = 0.075, y = 375, label = paste('VoI at 5%:', scales::dollar(signif(VoI, 3)))),
#           family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
rm(list = ls())
blogdown::serve_site()
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1; prob_lower <- 0; prob_upper <- 0.4
sa_df <- data.frame(fn = double(), VoI = double())
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375, label = paste('VoI at 5%:', scales::dollar(signif(VoI, 3)))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1; prob_lower <- 0; prob_upper <- 0.4
sa_df <- data.frame(fn = double(), VoI = double())
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
VoPI <- 420
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375, label = paste('VoI at 5%:', scales::dollar(signif(VoI, 3)))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
blogdown::serve_site()
sa_df
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
false_pos <- 0.1; prob_lower <- 0; prob_upper <- 0.4
sa_df <- data.frame(fn = double(), VoI = double())
for (fn in seq(from = prob_lower, to = prob_upper, length.out = 9)) {
prepost_analysis <- RHugin::read.rhd('prepost_influence_diagram.net')
test_results_table <- get.table(domain = prepost_analysis, node = 'Result')
test_results_table['Freq'] <- c((1 - fn), fn, 0,
0, 0, 1,
false_pos, (1 - false_pos), 0,
0, 0, 1)
set.table(domain = prepost_analysis, node = 'Result', data = test_results_table)
RHugin::compile(object = prepost_analysis)
RHugin::propagate(object = prepost_analysis)
expected_costs <- get.utility(domain = prepost_analysis, node = 'Test')
sa_df <- rbind(sa_df, data.frame(fn = fn, VoI = max(0, expected_costs[1] - expected_costs[2])))
}
VoPI <- 420
ggplot(data = sa_df,
mapping = aes(x = fn, y = VoI))+
geom_line(mapping = aes(linetype = 'Imperfect Information'))+
geom_point(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = fn, y = VoI), shape = 1, size = 3)+
geom_text(data = sa_df %>%
dplyr::filter(fn == 0.05),
mapping = aes(x = 0.075, y = 375, label = paste('VoI at 5%:', scales::dollar(signif(VoI, 3)))),
family = 'Bahnschrift', size = 3)+
geom_hline(mapping = aes(linetype = 'Perfect Information',
yintercept = VoPI))+
scale_x_continuous(name = 'Probability of the Test Missing Damage',
limits = c(prob_lower, prob_upper), labels = scales::percent)+
scale_y_continuous(name = 'Expected Value of Diagnostic Test',
limits = c(0, VoPI), labels = scales::dollar)+
theme_ddf_light()
blogdown:::serve_site()
